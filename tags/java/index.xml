<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Jack&#39;s Blog Site</title>
    <link>http://yangfanjack.top/tags/java/</link>
    <description>Recent content in Java on Jack&#39;s Blog Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 17 May 2023 08:34:33 +0800</lastBuildDate><atom:link href="http://yangfanjack.top/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>设计模式浅析</title>
      <link>http://yangfanjack.top/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%B5%85%E6%9E%90/</link>
      <pubDate>Wed, 17 May 2023 08:34:33 +0800</pubDate>
      
      <guid>http://yangfanjack.top/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%B5%85%E6%9E%90/</guid>
      <description>what is design pattern? 设计模式Design Pattern是一套代码设计经验的总结 代码中合理的运用设计模式可以解决很多问题 设计模式的三大类： 创建型模式(Cr</description>
    </item>
    
    <item>
      <title>Java中加载配置文件的几种方法</title>
      <link>http://yangfanjack.top/post/java%E4%B8%AD%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 21 Mar 2021 19:22:16 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java%E4%B8%AD%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>Java的常用web框架中会有很多配置文件，这些配置文件都是为了降低代码耦合性而从代码中剥离出来的。为了在程序运行时动态地加载这些文件进内存</description>
    </item>
    
    <item>
      <title>javaWeb三大组件</title>
      <link>http://yangfanjack.top/post/javaweb%E4%B8%89%E5%A4%A7%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Tue, 16 Mar 2021 10:51:26 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/javaweb%E4%B8%89%E5%A4%A7%E7%BB%84%E4%BB%B6/</guid>
      <description>Servlet 见之前的两篇博客：《javaWeb核心-理解servlet》，《javaWeb核心-servlet细节》，讲的很详细 Filter：过滤器 拦</description>
    </item>
    
    <item>
      <title>java基础快速回顾-下</title>
      <link>http://yangfanjack.top/post/java%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%9B%9E%E9%A1%BE-%E4%B8%8B/</link>
      <pubDate>Tue, 09 Mar 2021 11:42:39 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%9B%9E%E9%A1%BE-%E4%B8%8B/</guid>
      <description>Lambda表达式 匿名内部类可以省去定义实现类，但是语法太复杂 lambda表达式不关注面向对象，返璞归真，仅仅关注内容本身。 1 2 //一些参数</description>
    </item>
    
    <item>
      <title>java基础快速回顾-中</title>
      <link>http://yangfanjack.top/post/java%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%9B%9E%E9%A1%BE-%E4%B8%AD/</link>
      <pubDate>Sat, 06 Mar 2021 09:36:20 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%9B%9E%E9%A1%BE-%E4%B8%AD/</guid>
      <description>Java某些类 Object类 java的根类 toString() Object类的toString()方法默认返回该对象实现类的“类名+@+hashcode”值 看</description>
    </item>
    
    <item>
      <title>JDBC</title>
      <link>http://yangfanjack.top/post/jdbc/</link>
      <pubDate>Thu, 18 Feb 2021 07:31:41 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/jdbc/</guid>
      <description>JDBC JDBC本质： 其实是官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口。各个数据库厂商去实现这套接口，提供数据库驱动jar包。</description>
    </item>
    
    <item>
      <title>java-JVM</title>
      <link>http://yangfanjack.top/post/java-jvm/</link>
      <pubDate>Sat, 02 Jan 2021 15:59:28 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java-jvm/</guid>
      <description>JVM重点问题 JVM位置 JVM体系结构 类加载器 双亲委派机制 沙箱安全机制 Native PC寄存器 方法区 三种JVM 栈 堆 新生区，老年区 永久区 堆内存调优 GC机制</description>
    </item>
    
    <item>
      <title>Java-GC机制</title>
      <link>http://yangfanjack.top/post/java-gc%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 21 Dec 2020 09:55:07 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java-gc%E6%9C%BA%E5%88%B6/</guid>
      <description>背景： Java的内存管理实际上就是对象的管理，其中包括对象的分配和释放。对于程序员来说，分配对象使用new关键字；释放对象时，只要将对象所有</description>
    </item>
    
    <item>
      <title>java基础快速回顾-上</title>
      <link>http://yangfanjack.top/post/java%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%9B%9E%E9%A1%BE-%E4%B8%8A/</link>
      <pubDate>Sat, 19 Dec 2020 15:08:49 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E5%9B%9E%E9%A1%BE-%E4%B8%8A/</guid>
      <description>java语言开发环境搭建 java虚拟机——JVM 实质就是翻译，把.class文件翻译成计算机能认识的机器语言 java所谓的跨平台指的是jav</description>
    </item>
    
    <item>
      <title>java-反射</title>
      <link>http://yangfanjack.top/post/java-%E5%8F%8D%E5%B0%84/</link>
      <pubDate>Sat, 19 Dec 2020 12:56:10 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java-%E5%8F%8D%E5%B0%84/</guid>
      <description>静态语言（强类型语言） 静态语言是在编译时变量的数据类型即可确定的语言，多数静态类型语言要求在使用变量之前必须声明数据类型。 例如：C++、Ja</description>
    </item>
    
    <item>
      <title>java-注解</title>
      <link>http://yangfanjack.top/post/java-%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Sat, 19 Dec 2020 12:55:39 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/java-%E6%B3%A8%E8%A7%A3/</guid>
      <description>什么是注解 可以被其他程序读取 可以附加在package,class,method,field上都可以添加注解 可通过反射实现对注解中信息的访问 注</description>
    </item>
    
    <item>
      <title>javaWeb核心:servlet细节</title>
      <link>http://yangfanjack.top/post/javaweb%E6%A0%B8%E5%BF%83-servlet%E7%BB%86%E8%8A%82/</link>
      <pubDate>Wed, 25 Mar 2020 16:42:00 +0000</pubDate>
      
      <guid>http://yangfanjack.top/post/javaweb%E6%A0%B8%E5%BF%83-servlet%E7%BB%86%E8%8A%82/</guid>
      <description>HTTP协议： 概念：Hyper Text Transfer Protocol 特点： 基于TCP/IP的应用层协议 默认端口是80 基于请求响应模型，一次请求一次响应 无状态的；每次请求之间</description>
    </item>
    
  </channel>
</rss>
